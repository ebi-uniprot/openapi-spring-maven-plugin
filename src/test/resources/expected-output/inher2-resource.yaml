openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: localhost
  description: ' Default server url'
paths:
  /interfaceoperation/{petId}:
    get:
      summary: Find pet by ID Operation in SubResource
      description: Returns a pet in SubResource
      operationId: getPetById_1
      parameters:
      - name: petId
        in: path
        description: ID of pet that needs to be fetched
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pet'
  /operationsresource2:
    get:
      operationId: getUser
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /operationsresource:
    get:
      summary: Find pet by ID
      description: combinatedfullyannotatedoperation/{petId}
      operationId: getPetById
      parameters:
      - name: petId
        in: query
        description: ID of pet that needs to be fetched
        required: true
        schema:
          type: integer
          format: int64
      - name: message
        in: query
        required: true
        schema:
          type: string
      responses:
        default:
          description: The pet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pet'
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
    put:
      description: combinatedsameOperationName
      operationId: getPerson
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
    post:
      operationId: getUser_1
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
    head:
      description: combinatedsameOperationNameDuplicated
      operationId: getPerson_1
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        200:
          description: default response
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
          - available,pending,sold
      xml:
        name: Pet
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
